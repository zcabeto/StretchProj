doctype html
html
  head
    title= movie.title
    block stylesheets
      link(rel='stylesheet', href='/stylesheets/style.css')
    script(src='https://cdn.jsdelivr.net/npm/chart.js')
  body
    .menu
      h1= movie.title
      .menu-content
        p: #[a(href='/') Home] #[a(href='/films') Films] #[a(href='/genres') Genres] #[a(href='/predict') Predict]

    p Here you can see all the information about your chosen film, including its genres, tags, and ratings.

    table 
      thead 
        th Id 
        th Title 
        th Rating
        th Director 
        th Cast 
        th Release Date
      tbody
        td= movie.movieId
        td= movie.title
        td= rating
        td= movie.Director 
        td #{movie.TopTwoActors.slice(1,movie.TopTwoActors.length-1).split(', ').map(actor => actor.slice(1,actor.length-1))}
        td= movie.releaseDate

    .container(style="display: flex; align-items: flex-start;")
      if movie.posterUrl
        .image-container(style="flex: 0 0 300px; margin-left: 70px; margin-top: 20px; margin-bottom: 0px")
          img(src=movie.posterUrl alt=movie.title + " Poster" style="width: 100%; height: auto;")
      else
        p No poster URL found

      .tables-container(style="flex: 1; display: flex; flex-direction: column; margin-left: 10px; margin-right: 20px")
        table
          thead
            tr
              th 
                p: a(href='/genres') Genres
          tbody
            each genre in genres
              tr
                td= genre.name

        table(style="margin-top: 10px;")
          thead
            tr
              th Tags
          tbody
            each tag in tags
              tr
                td= tag.tag

    canvas#genresChart(width='600', height='200', style="margin-left:20px; margin-right: 50px; margin-top: 0px")
    p


    table
      thead
        tr
          th User 
          th Rating 
          th Date
      tbody
        each viewer in viewers
          tr(class='row-link', data-url=`/userInfo/${viewer.userId}`)
            td= viewer.userId 
            td= viewer.rating 
            td= viewer.watchDate 
    
    .button_bar
      form(action='/filmInfo/'+movie.movieId, method='GET')
        input(type='hidden', name='itemNum', id='itemNum', value=itemNum-30)
        button(type='submit') Previous Page
    
    .button_bar
      form(action='/filmInfo/'+movie.movieId, method='GET')
        input(type='hidden', name='itemNum', id='itemNum', value=itemNum+30)
        button(type='submit') Next Page
    
    script.
      document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.row-link').forEach(function(element) {
          element.addEventListener('click', function() {
            const url = this.dataset.url;
            window.location.href = url;
          });
        });
      });
    
    script.
      ratingFrequencies = '#{ratingFrequencies}'.split(',');
      let dataset = [];
      for (var i=0; i<1; i++) {
        dataset.push({
          label: 'User Ratings',
          data: ratingFrequencies,
          borderWidth: 1,
        });
      }
      
      const ctx = document.getElementById('genresChart');

      new Chart(ctx, {
        type: 'bar',
        data: {
          labels: ['0.5', '1.0', '1.5', '2.0', '2.5', '3.0', '3.5', '4.0', '4.5', '5.0'],
          datasets: dataset
        },
        options: {
          scales: {
            y: {
              title: { text:'Frequency', display: true },
              beginAtZero: true
            },
            x: {
              title: { text: 'Rating ?/5', display: true}
            }
          },
          plugins: {
            title: {text: 'Rating Distribution', display: true},
            legend: {
              display: false
            }
          }
        }
      });